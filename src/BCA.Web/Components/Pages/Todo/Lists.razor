@page "/lists"

@using BCA.Application.Features.Todo
@using BCA.Application.Models.Todo
@using MediatR

<PageTitle>Lists</PageTitle>
<div class="alert alert-secondary" role="alert">
    This is a list of your todo lists. You can create, edit and delete them.
    Lists you delete will be removed from this table and visible on <a href="/lists-restore">restore</a> page.
</div>

@if (TodoLists.Any())
{
    <table class="table table-borderless table-hover">
        <thead>
        <tr>
            <th>Name</th>
            <th class="text-end">Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var todoList in TodoLists)
        {
            <tr>
                <td class="align-middle">@todoList.Name</td>
                <td class="text-end">
                    <a class="btn btn-primary" role="button" href="/edit-todo/@todoList.Id">
                        <span class="bi-pencil-square"></span>
                    </a>
                    <form method="post" class="d-inline" 
                          @formname="@($"deleteList{todoList.Id}")"
                          @onsubmit="() => DeleteList(todoList.Id)">
                        <button class="btn btn-primary">
                            <span class="bi-x-square"></span>
                        </button>
                        <AntiforgeryToken/>
                    </form>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <br/>
    <a href="/edit-todo">Create new list</a>
}
else
{
    <p>Loading ...</p>
}

@code {
    [Inject] private NavigationManager Navigation { get; set; } = null!;
    [Inject] private ISender Sender { get; set; } = null!;
    private List<TodoListDto> TodoLists { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        TodoLists = await Sender.Send(new GetTodoLists());
    }

    private async Task DeleteList(int id)
    {
        await Sender.Send(new DeleteTodoList(id));
        Navigation.Refresh();
    }
}